---
import Caratula from "./item-slider/caratula.astro";
import CapituloViolencias from "./item-slider/violencia/index.astro";
import CapituloMitigacion from "./item-slider/mitigacion/index.astro";
import CapituloTrayectorias from "./item-slider/trayectorias/index.astro";
import CapituloEncuestadas from "./item-slider/encuestadas/index.astro";
import { Icon } from "astro-icon/components";
import SkeletonLoaderPresentation from "../common/skeleton-loader-presentation.astro";
// Define un estado inicial para currentSlide
---

<div id="loader" class="w-full flex h-[85vh] transition-all duration-1000">
  <SkeletonLoaderPresentation />
</div>
<div class="reveal bg-white opacity-0 transition-opacity duration-1000">
  <div class="slides mt-1 !h-full">
    <CapituloViolencias />
    <CapituloMitigacion />
    <CapituloTrayectorias />
    <CapituloEncuestadas />
    <Caratula />
  </div>
</div>

<div id="slide-overlay">
  <Icon name="mdi:phone-rotate-landscape" class="text-8xl" />
  Por favor, gira tu dispositivo para ver la presentaci√≥n.
</div>

<style>
  @media screen and (orientation: portrait) {
    #slide-overlay {
      display: flex;
      flex-direction: column;
      justify-content: center;
      align-items: center;
      text-align: center;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.99);
      color: white;
      font-size: 2rem;
      z-index: 9999;
    }
  }
  @media screen and (orientation: landscape) {
    #slide-overlay {
      display: none;
    }
  }
</style>

<script>
  import Reveal from "reveal.js";
  import Markdown from "reveal.js/plugin/markdown/markdown.esm.js";
  import { highlightLink } from "@/utils/slider-utils.js";
  let deck = new Reveal({
    width: "100%",
    margin: 0,
    plugins: [Markdown],
  });
  const initReveal = () => {
    setTimeout(() => {
      const navbar = document.getElementById("navbar");
      const loader = document.getElementById("loader");
      const reveal = document.querySelector(".reveal");
      const height = navbar?.offsetHeight
        ? window.innerHeight - navbar?.offsetHeight
        : 1000;

      reveal.style.height = `${height}px`;
      reveal?.classList.remove("opacity-0");
      loader?.classList.add("!h-0");
      loader?.classList.add("opacity-0");
    }, 1000);

    // Inicializa reveal.js

    deck.on("ready", () => {
      highlightLink(deck);
    });

    deck.on("slidechanged", () => {
      highlightLink(deck);
    });
    deck.initialize({
      minScale: 1,
      maxScale: 1,
      center: false,
    });
  };
  if (window.innerWidth > window.innerHeight) {
    initReveal();
  }

  window.addEventListener("orientationchange", () => {
    const isLandscape = window.screen.orientation.type.includes("landscape");
    if (isLandscape) {
      setTimeout(() => {
        initReveal();
      }, 300);
    } else deck.destroy();
  });
</script>
