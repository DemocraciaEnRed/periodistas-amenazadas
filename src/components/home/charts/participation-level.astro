---

---

<div class="md:w-1/2">
  <div class="mt-10 text-center h-full flex flex-col">
    <h4 class="text-4xl mb-5 font-bold">215 periodistas encuestadas</h4>
    <p class="text-lg mdpx-16">
      FOPEA llevó adelante este estudio de casos múltiples con carácter federal
      recogiendo testimonios de periodistas de distintas provincias. Se busca
      visibilizar las violencias que atraviesan en su labor y preguntarnos sobre
      cómo podemos aportar a la construcción de un entorno más seguro e
      igualitario para el ejercicio del periodismo.
    </p>
    <div class="flex-1 flex flex-col gap-5 mt-4">
      <div
        class="w-full border flex-col lg:flex-row border-primary-500 rounded-xl flex items-center px-3 lg:px-10 h-1/3"
      >
        <div id="barAmbito" class="w-full h-48 lg:h-full lg:w-1/3"></div>
        <p class="w-2/3 p-3 lg:p-10">
          Afirman haber sufrido violencia en el ámbito de la profesión.
        </p>
      </div>
      <div
        class="w-full border flex-col lg:flex-row border-primary-500 rounded-xl flex items-center px-3 lg:px-10 h-1/3"
      >
        <div id="barForma" class="w-full h-48 lg:h-full lg:w-1/3"></div>
        <p class="w-2/3 p-3 lg:p-10">
          Afirman haber sufrido múltiples formas de violencia.
        </p>
      </div>
    </div>
  </div>
</div>

<style></style>

<script>
  import * as echarts from "echarts";
  // Initialize the echarts instance based on the prepared dom
  var ambitoChart = echarts.init(document.getElementById("barAmbito"));
  var formaChart = echarts.init(document.getElementById("barForma"));

  // Registrar el mapa en ECharts
  const dataAmbito = [
    { name: "Afirmativa", value: 187, itemStyle: { color: "#401F71" } },
    { name: "Negativa", value: 28, itemStyle: { color: "#FF4C39" } },
  ];

  const dataforma = [
    { name: "Afirmativa", value: 159, itemStyle: { color: "#401F71" } },
    { name: "Negativa", value: 56, itemStyle: { color: "#FF4C39" } },
  ];

  const getHigherPercentage = (valor1, valor2, total) => {
    if (total === 0) return "Indefinido"; // Evita división por cero

    const porcentaje1 = (valor1 / total) * 100;
    const porcentaje2 = (valor2 / total) * 100;

    return porcentaje1 > porcentaje2
      ? porcentaje1.toFixed(0) + "%"
      : porcentaje2.toFixed(0) + "%";
  };

  const formatOptions = (data) => {
    const options = {
      tooltip: {
        trigger: "item",
        formatter: "{b}: {c}",
      },
      legend: {
        show: false,
      },
      series: [
        {
          name: "Access From",
          type: "pie",
          radius: ["60%", "70%"],
          avoidLabelOverlap: false,
          label: {
            show: true, // Mostrar el label en el centro
            position: "center",
            formatter: function (params) {
              // Encontrar el valor más alto
              let maxValue = getHigherPercentage(
                data.map((item) => item.value)[0],
                data.map((item) => item.value)[1],
                data.map((item) => item.value)[0] +
                  data.map((item) => item.value)[1]
              );

              // Mostrar solo el valor más alto
              return maxValue;
            },
            fontSize: 30,
            fontWeight: "bold",
          },
          emphasis: {
            disabled: true,
          },
          labelLine: {
            show: false,
          },
          data: dataAmbito,
        },
      ],
    };
    return options;
  };

  ambitoChart.setOption(formatOptions(dataAmbito));
  formaChart.setOption(formatOptions(dataforma));
</script>
